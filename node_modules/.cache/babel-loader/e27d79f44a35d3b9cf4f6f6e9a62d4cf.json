{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markl\\\\Desktop\\\\task\\\\src\\\\pages\\\\Category.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { images } from \"../redux/images/actions\";\nimport Image from \"../components/Image\";\nimport { selectImageList, selectNextPage, selectImage } from \"../redux/images/selectors\";\nimport { DefaultLayout } from \"../layout\";\nimport Loading from \"../components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImagesList = ({\n  list\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.map((item, index) => /*#__PURE__*/_jsxDEV(Image, {\n      src: item.url\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_c = ImagesList;\n\nconst Category = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    isLoading\n  } = useSelector(selectImage);\n  const list = useSelector(selectImageList);\n  const nextPage = useSelector(selectNextPage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(images.resetState());\n    dispatch(images.search(\"images\", id, 0));\n  }, [id]);\n\n  const loadMore = () => {\n    dispatch(images.search(\"images\", id, nextPage));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        marginBottom: \"50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImagesList, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadMore,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"Xc1cBdEQ7TheL8Pv/LzpD22YOyo=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c2 = Category;\nexport default Category;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImagesList\");\n$RefreshReg$(_c2, \"Category\");","map":{"version":3,"sources":["C:/Users/markl/Desktop/task/src/pages/Category.tsx"],"names":["React","useEffect","useParams","useDispatch","useSelector","images","Image","selectImageList","selectNextPage","selectImage","DefaultLayout","Loading","ImagesList","list","map","item","index","url","Category","id","isLoading","nextPage","dispatch","resetState","search","loadMore","position","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SACEC,eADF,EAEEC,cAFF,EAGEC,WAHF,QAIO,2BAJP;AAKA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAUA,MAAMC,UAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpD,sBACE;AAAA,cACGA,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAmBC,KAAnB,kBACR,QAAC,KAAD;AAAmB,MAAA,GAAG,EAAED,IAAI,CAACE;AAA7B,OAAYD,KAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD,CARD;;KAAMJ,U;;AAUN,MAAMM,QAAkB,GAAG,MAAM;AAAA;;AAI/B,QAAM;AAAEC,IAAAA;AAAF,MAASjB,SAAS,EAAxB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAgBhB,WAAW,CAACK,WAAD,CAAjC;AACA,QAAMI,IAAI,GAAGT,WAAW,CAACG,eAAD,CAAxB;AACA,QAAMc,QAAQ,GAAGjB,WAAW,CAACI,cAAD,CAA5B;AAEA,QAAMc,QAAQ,GAAGnB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACjB,MAAM,CAACkB,UAAP,EAAD,CAAR;AACAD,IAAAA,QAAQ,CAACjB,MAAM,CAACmB,MAAP,CAAc,QAAd,EAAwBL,EAAxB,EAA4B,CAA5B,CAAD,CAAR;AACD,GAHQ,EAGN,CAACA,EAAD,CAHM,CAAT;;AAKA,QAAMM,QAAQ,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAACjB,MAAM,CAACmB,MAAP,CAAc,QAAd,EAAwBL,EAAxB,EAA4BE,QAA5B,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAA,eACGD,SAAS,iBACR;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,YAAY,EAAE;AAAtC,OAAZ;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEd;AAAlB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEY,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMP,Q;UAIWhB,S,EACOE,W,EACTA,W,EACIA,W,EAEAD,W;;;MATbe,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { images } from \"../redux/images/actions\";\nimport Image from \"../components/Image\";\nimport {\n  selectImageList,\n  selectNextPage,\n  selectImage,\n} from \"../redux/images/selectors\";\nimport { DefaultLayout } from \"../layout\";\nimport Loading from \"../components/Loading\";\n\ntype imageProps = {\n  id: string;\n  url: string;\n};\n\ntype ListProps = {\n  list: any[];\n};\nconst ImagesList: React.FC<ListProps> = ({ list }) => {\n  return (\n    <>\n      {list.map((item: imageProps, index) => (\n        <Image key={index} src={item.url} />\n      ))}\n    </>\n  );\n};\n\nconst Category: React.FC = () => {\n  interface ParamTypes {\n    id: string;\n  }\n  const { id } = useParams<ParamTypes>();\n  const { isLoading } = useSelector(selectImage);\n  const list = useSelector(selectImageList);\n  const nextPage = useSelector(selectNextPage);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(images.resetState());\n    dispatch(images.search(\"images\", id, 0));\n  }, [id]);\n\n  const loadMore = () => {\n    dispatch(images.search(\"images\", id, nextPage));\n  };\n\n  return (\n    <DefaultLayout>\n      {isLoading && (\n        <div style={{ position: \"relative\", marginBottom: \"50px\" }}>\n          <Loading></Loading>\n        </div>\n      )}\n      <ImagesList list={list} />\n      <div className=\"\">\n        <button onClick={loadMore}>Load More</button>\n      </div>\n    </DefaultLayout>\n  );\n};\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}