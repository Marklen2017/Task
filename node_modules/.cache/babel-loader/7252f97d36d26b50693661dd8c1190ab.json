{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { createLogger } from \"redux-logger\";\n\n// import rootReducer from \"./rootReducer\";\n\n// const logger = createLogger();\n// let middleware: Array<any> = [thunk];\n\n// let configStore: any = applyMiddleware(...middleware);\n\n// declare global {\n//   interface Window {\n//     __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n//   }\n// }\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// if (process.env.NODE_ENV === \"development\") {\n//   middleware = [...middleware, logger];\n//   configStore = composeEnhancers(applyMiddleware(...middleware));\n// }\n\n// const initialState: any = {};\n\n// const store = createStore(rootReducer, initialState, configStore);\n\n// export type RootStore = ReturnType<typeof rootReducer>;\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}