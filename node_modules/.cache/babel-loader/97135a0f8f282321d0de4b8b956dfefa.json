{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markl\\\\Desktop\\\\task\\\\src\\\\components\\\\Image\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useImage } from \"../../hooks/useImage\";\nimport Loading from \"../Loading\";\nimport { WhiteBox } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoadImage = ({\n  src\n}) => {\n  _s();\n\n  const {\n    hasLoaded,\n    hasError,\n    localUrl\n  } = useImage(src);\n\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error No Image \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!hasLoaded && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this), hasLoaded && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: localUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoadImage, \"bIbnKDe3qXQPfngExofUpWRFZcg=\", false, function () {\n  return [useImage];\n});\n\n_c = LoadImage;\n\nconst Image = ({\n  src\n}) => {\n  return /*#__PURE__*/_jsxDEV(WhiteBox, {\n    children: /*#__PURE__*/_jsxDEV(LoadImage, {\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Image;\nexport default Image;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadImage\");\n$RefreshReg$(_c2, \"Image\");","map":{"version":3,"sources":["C:/Users/markl/Desktop/task/src/components/Image/index.tsx"],"names":["React","useImage","Loading","WhiteBox","LoadImage","src","hasLoaded","hasError","localUrl","Image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,QAAT,QAAyB,SAAzB;;;;AAEA,MAAMC,SAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACxD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAoCP,QAAQ,CAACI,GAAD,CAAlD;;AAEA,MAAIE,QAAJ,EAAc;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,eACG,CAACD,SAAD,iBAAc,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADjB,EAEGA,SAAS,iBAAI;AAAK,MAAA,GAAG,EAAEE;AAAV;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA,kBADF;AAMD,CAbD;;GAAMJ,S;UACsCH,Q;;;KADtCG,S;;AAeN,MAAMK,KAAgC,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAa;AACpD,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMI,K;AAQN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useImage } from \"../../hooks/useImage\";\nimport Loading from \"../Loading\";\nimport { WhiteBox } from \"./style\";\n\nconst LoadImage: React.FC<{ src: string }> = ({ src }) => {\n  const { hasLoaded, hasError, localUrl } = useImage(src);\n\n  if (hasError) {\n    return <p>Error No Image </p>;\n  }\n\n  return (\n    <>\n      {!hasLoaded && <Loading></Loading>}\n      {hasLoaded && <img src={localUrl} />}\n    </>\n  );\n};\n\nconst Image: React.FC<{ src: string }> = ({ src }) => {\n  return (\n    <WhiteBox>\n      <LoadImage src={src} />\n    </WhiteBox>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}