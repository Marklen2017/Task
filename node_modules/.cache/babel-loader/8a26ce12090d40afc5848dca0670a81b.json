{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useImage = src => {\n  _s();\n\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [localUrl, setLocalUrl] = useState(\"\");\n  useEffect(() => {\n    setHasLoaded(false);\n    setHasError(false);\n    fetch(src, {\n      mode: \"no-cors\"\n    }).then(() => {\n      setLocalUrl(src);\n      setHasLoaded(true);\n    }).catch(function () {\n      setHasError(true);\n    });\n  }, [src]);\n  return {\n    hasLoaded,\n    hasError,\n    localUrl\n  };\n};\n\n_s(useImage, \"73DzhzD4AI3wZ5pt2PwQFKr0otg=\");","map":{"version":3,"sources":["C:/Users/markl/Desktop/task/src/hooks/useImage/index.tsx"],"names":["useState","useEffect","useImage","src","hasLoaded","setHasLoaded","hasError","setHasError","localUrl","setLocalUrl","fetch","mode","then","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAiB;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEAG,IAAAA,KAAK,CAACP,GAAD,EAAM;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAN,CAAL,CACGC,IADH,CACQ,MAAM;AACVH,MAAAA,WAAW,CAACN,GAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJH,EAKGQ,KALH,CAKS,YAAY;AACjBN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAPH;AAQD,GAZQ,EAYN,CAACJ,GAAD,CAZM,CAAT;AAcA,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA,QAAb;AAAuBE,IAAAA;AAAvB,GAAP;AACD,CApBM;;GAAMN,Q","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useImage = (src: string) => {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [localUrl, setLocalUrl] = useState(\"\");\n\n  useEffect(() => {\n    setHasLoaded(false);\n    setHasError(false);\n\n    fetch(src, { mode: \"no-cors\" })\n      .then(() => {\n        setLocalUrl(src);\n        setHasLoaded(true);\n      })\n      .catch(function () {\n        setHasError(true);\n      });\n  }, [src]);\n\n  return { hasLoaded, hasError, localUrl };\n};\n"]},"metadata":{},"sourceType":"module"}